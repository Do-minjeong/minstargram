<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
  <mapper namespace="mj.project.mapper.MemberMapper">
  
  	<resultMap type="mj.project.domain.MemberVO" id="memberMap">
  		<id property="username" column="username"/>
  		<result property="member_no" column="member_no"/>
  		<result property="username" column="username"/>
  		<result property="name" column="name"/>
  		<result property="userid" column="userid"/>
  		<result property="password" column="password"/>
  		<result property="profile_photo" column="profile_photo" />
  		<collection property="authList" resultMap="authMap"></collection>
  	</resultMap>
  	<resultMap type="mj.project.domain.AuthVO" id="authMap">
  		<result property="username" column="username"/>
  		<result property="auth" column="auth"/>
  	</resultMap>
  	
  	<!-- 로그인 하기 위한 read SQL -->
  	<select id="read" resultMap="memberMap">
  		SELECT m.member_no, m.username, name, userid, auth, password, profile_photo
  		FROM members m JOIN auths au ON m.member_no = au.member_no
  			 LEFT OUTER JOIN general_members gm ON m.member_no = gm.member_no
  		WHERE m.username = #{username}
  	</select>
  	
  	<!-- 회원가입시 공통적으로 insert하는 SQL -->
  	<update id="insert" >
  		<selectKey keyProperty="member_no" resultType="int" order="BEFORE">
  			SELECT member_no_seq.NEXTVAL FROM dual
  		</selectKey>
  		{CALL
  		 DECLARE
  		 BEGIN
  			 
  			 INSERT INTO members(member_no, username, name, userid, login_type_no)
  		 	 VALUES( #{member_no}, #{username}, #{name}, #{userid}, #{login_type_no});
  		 	 
  		 	 INSERT INTO auths(auth_no, auth, member_no)
  			 VALUES( auth_no_seq.NEXTVAL , #{auth} , #{member_no});
  		 END
  		}
  	</update>
  	
  	<!-- 일반회원 가입시 따로 insert 하는 SQL -->
  	<insert id="insertDetailInfo">
  		<choose>
  			<when test="login_type_no==1">
		  		INSERT INTO general_members(general_no, password, member_no)
		  		VALUES (general_no_seq.NEXTVAL, #{password}, #{member_no})  		  			
  			</when>
  			<when test="login_type_no==2">
  				INSERT INTO social_members(social_no, social_id, member_no)
  				VALUES(social_no_seq.NEXTVAL, #{social_id}, #{member_no})
  			</when>
  		</choose>
  	</insert>
  	
  	<!-- Username이 중복되는 지 확인하기 위한 SQL -->
  	<select id="selectUsername" resultType="int">
  		SELECT COUNT(*)
  		FROM members
  		WHERE username = #{username}
  	</select>
  	
  	<!-- UserID UPDATE하는 SQL -->
  	<update id="updateUserID" parameterType="map">
  		UPDATE members
  		SET userid = #{userid}, update_date = sysdate
  		WHERE username = #{username}
  	</update>
  	
  	<select id="userIdCheck" resultType="String">
  		SELECT userid
  		FROM members
  		WHERE username = #{username}
  	</select>
  	
  	
  </mapper>